107p c#에서 배열의 길이 수정하는 Resize메소드나 가변배열이 있으니
'동적인 메모리의 구성'의 필요성이 떨어지는거같다.

배열의 길이 수정
int[] myArr;
Array.Resize(ref myArr, myArr.Length + 5);

109p
1.클래스를 =null;로 초기화해도 얕은복사는 얕은복사이다.
2.반복문에서 newNode값을 생성자로 초기화해도 이전의 newNode와 얕은복사 되어 있는 head의 값은 변하지 않는다.
3.head의 값이 바뀌는 이유는 tail과 얕은복사 되어있기 때문이다.
4.head가 null일때 초기화한 newNode는 반복 생성되는 다른 newNode와 관계가없다.
newNode를 조건문에서 생성자로초기화해도
이전 반복문에서 head의 newNode의 값은 head에 남아있다 

newNode처럼 초기화 하지 않기 때문에 tail과 head는 되도록 서로 참조하는 일은 없어야한다.


//newNode 때문에 산만하지만 쉽게 생각하기, tail은 head의 꼬리가 된다.

삽입, 삭제, 조회의 기능을 별도의 메소드로 구현하는게 아직 해결이 안되서 진도를 못나가고있다,,